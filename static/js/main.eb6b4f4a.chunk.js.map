{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleDocumentKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","pressedKeyMessage","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAiBE,WACE,IAAMQ,EAAoBF,KAAKR,MAAMC,WAAX,mCACMO,KAAKR,MAAMC,WADjB,KAEtB,0BAEJ,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGD,UAzBX,GAAyBE,IAAMC,e,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.eb6b4f4a.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.PureComponent {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleDocumentKeyUp);\n  }\n\n  handleDocumentKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const pressedKeyMessage = this.state.pressedKey\n      ? `The last pressed key is [${this.state.pressedKey}]`\n      : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKeyMessage}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}